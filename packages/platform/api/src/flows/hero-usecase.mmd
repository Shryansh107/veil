sequenceDiagram
    participant Consumer
    participant AuthService
    participant OnboardingService
    participant SubscriptionService
    participant GatewayService
    participant Provider
    participant ProviderService
    
    critical Provider Onboarding Flow
        note right of OnboardingService: Provider Onboarding Flow
        
        Provider->>+AuthService: Authenticate (credentials)
        AuthService->>AuthService: validate credentials & assign 'Provider' role
        AuthService-->>-Provider: JWT token
        
        Provider->>+OnboardingService: PUT /onboard (JWT, *path*, *required_headers*, METHOD)
        OnboardingService->>OnboardingService: verify JWT via JWKS URL
        OnboardingService->>OnboardingService: extract providerId
        OnboardingService->>OnboardingService: register API & generate api_id
        OnboardingService->>+GatewayService: configure route (*path*, *required_headers*)
        GatewayService-->>-OnboardingService: route configured
        OnboardingService->>-Provider: api_id
    end
    
    critical Consumer Subscription Flow
        note right of SubscriptionService: Consumer Subscription Flow
        
        Consumer->>+AuthService: Authenticate (credentials)
        AuthService->>AuthService: validate credentials & assign 'Consumer' role
        AuthService-->>-Consumer: JWT token
        
        Consumer->>+SubscriptionService: POST /subscribe (JWT, api_id)
        SubscriptionService->>SubscriptionService: verify JWT via JWKS URL
        SubscriptionService->>SubscriptionService: extract userId
        SubscriptionService->>SubscriptionService: generate API key for user+api
        SubscriptionService->>+GatewayService: PUT /keys (*path*, api_key)
        GatewayService-->>-SubscriptionService: api key registered
        SubscriptionService->>-Consumer: api_key
    end

    critical Consumer Service Call
        note right of GatewayService: Consumer Service Call via Gateway
        
        activate GatewayService
        Consumer->>GatewayService: METHOD /*path* ('X-Subscription-Key=api_key')
        GatewayService->>GatewayService: validates 'X-Subscription-Key' against route
        
        alt Invalid Key
            GatewayService->>Consumer: 401 (Unauthorized)
        else Valid Key
            GatewayService->>GatewayService: adds *required_headers*
            GatewayService->>+ProviderService: METHOD /*path* (*required_headers*)
            ProviderService->>ProviderService: validates (*required_headers*)
            ProviderService->>-GatewayService: response
            GatewayService->>GatewayService: log request/response
            GatewayService-->>Consumer: response

            deactivate GatewayService
        end
    end